#! /usr/bin/env node
/* vim: ft=javascript shiftwidth=4 tabstop=4
 *
 * build.js
 * Copyright (C) 2013 Adrian Perez <aperez@igalia.com>
 *
 * Distributed under terms of the MIT license.
 */

var S = require("./site.js");
var M = require("mustache");
var P = require("path");
var F = require("fs");

var draft = (process.argv.length > 2) && (process.argv[2] == "draft");

site = new S.Site(".", draft);

for (var kind in site.content) {
    var items = site.content[kind];
    if (typeof items !== "object") {
        continue;
    }
    console.log("Building “" + kind + "”:");
    for (var i = 0; i < items.length; i++) {
        var item = items[i];
        var dest = item.url();
        console.log("  " + item.output_suffix() + ": " + item.relpath());
        F.writeFile(dest, item.render(), function (err) {
            if (err) throw err;
        });
    }
}


var feeds = site.metadata("@feeds");
if (feeds) {
    var feedtemplate = site.get_template("@feed");
    if (!feedtemplate) {
        console.error("No @feed template @layout defined in site.json");
    } else {
        console.log("Building “@feeds”:");
        for (var feed in feeds) {
            var data = site.traverse(feeds[feed]);
            if (data === undefined) {
                data = [];
            }
            data = {
                feed: feed,
                site: site,
                items: (data === undefined) ? [] : data,
            }
            data.items.sort(function (a, b) {
                return b.get_date().getTime() - a.get_date().getTime();
            });
            console.log("  feed: " + feed);
            F.writeFile(feed, M.render(feedtemplate, data), function (err) {
                if (err) throw err;
            });
        }
    }
}

