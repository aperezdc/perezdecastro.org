#! /usr/bin/env node
/* jslint node:true */
/* vim: ft=javascript shiftwidth=4 tabstop=4
 *
 * build.js
 * Copyright (C) 2013 Adrian Perez <aperez@igalia.com>
 *
 * Distributed under terms of the MIT license.
 */

"use strict";

var S = require("./site.js");
var M = require("mustache");
var F = require("fs");

var draft = (process.argv.length > 2) && (process.argv[2] === "draft");
var site = new S.Site(".", draft);

for (var kind in site.content) {
    var items = site.content[kind];
    if (typeof items !== "object") {
        continue;
    }
    console.log("Building “" + kind + "”:");
    for (var i = 0; i < items.length; i++) {
        var item = items[i];
        var dest = item.url();
        console.log("  " + item.output_suffix() + ": " + item.relpath());
        F.writeFile(dest, item.render(), function (err) {
            if (err) throw err;
        });
    }
}


var feeds = site.metadata("@feeds");
if (feeds) {
    var formats = feeds["%"];
	if (formats === undefined)
		formats = ["atom"];

	for (var i = 0; i < formats.length; i++) {
		var format = formats[i];
		var feedtemplate = site.getTemplate("@feed." + format);
		if (!feedtemplate) {
			console.error("No @feed." + format + " template @layout defined in site.json");
		} else {
			console.log("Building “@feeds” (" + format + "):");
			for (var feed in feeds) {
				if (feed === "%")
					continue;
				var data = site.traverse(feeds[feed]);
				if (data === undefined || !data.length) {
					data = [];
				}
				feed = feed.replace("%", format);
				data = {
					feed: feed,
					site: site,
					items: (data === undefined) ? [] : data,
				};
				data.items.sort(site.sortPostsByDate);
				console.log("  feed: " + feed);
				F.writeFile(feed, M.render(feedtemplate, data), function (err) {
					if (err) throw err;
				});
			}
		}
	}
}

